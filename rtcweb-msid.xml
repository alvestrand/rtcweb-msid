<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-ietf-mmusic-msid-08" ipr="trust200902">
  <front>
    <title abbrev="MSID in SDP">WebRTC MediaStream Identification in the
    Session Description Protocol</title>

    <author fullname="Harald Alvestrand" initials="H. T." surname="Alvestrand">
      <organization>Google</organization>

      <address>
        <postal>
          <street>Kungsbron 2</street>

          <city>Stockholm</city>

          <region/>

          <code>11122</code>

          <country>Sweden</country>
        </postal>

        <email>harald@alvestrand.no</email>
      </address>
    </author>

    <date day="30" month="January" year="2015"/>

    <abstract>
      <t>This document specifies a Session Description Protocol (SDP) Grouping
      mechanism for RTP media streams that can be used to specify relations
      between media streams.</t>

      <t>This mechanism is used to signal the association between the SDP
      concept of "m-line" and the WebRTC concept of "MediaStream" /
      "MediaStreamTrack" using SDP signaling.</t>

      <t>This document is a work item of the MMUSIC WG, whose discussion list
      is mmusic@ietf.org.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t/>

      <section title="Structure Of This Document">
        <t>This document adds a new Session Description Protocol (SDP)
        Grouping<xref target="RFC5888"/> relation between SDP m-lines <xref
        target="RFC4566"/> that can associate application layer identifiers
        with the binding between media streams, attaching identifiers to the
        media streams and attaching identifiers to the groupings they
        form.</t>

        <t><xref target="sect-why"/> gives the background on why a new
        mechanism is needed.</t>

        <t><xref target="sect-definition"/> gives the definition of the new
        mechanism.</t>

        <t><xref target="sect-semantic"/> gives the definition of the
        msid-semantic field, which gives the possibility of using MSIDs with
        different semantics in the same SDP message.</t>

        <t><xref target="sect-media-stream"/> gives the application of the new
        mechanism for providing necessary semantic information for the
        association of MediaStreamTracks to MediaStreams in the WebRTC
        API<xref target="W3C.WD-webrtc-20120209"> </xref>.</t>
      </section>

      <section anchor="sect-why" title="Why A New Mechanism Is Needed">
        <t>When media is carried by RTP <xref target="RFC3550"/>, each RTP
        media stream is distinguished inside an RTP session by its SSRC; each
        RTP session is distinguished from all other RTP sessions by being on a
        different transport association (strictly speaking, 2 transport
        associations, one used for RTP and one used for RTCP, unless RTP/RTCP
        multiplexing <xref target="RFC5761"/> is used).</t>

        <t>SDP gives a description based on m-lines. According to the model
        used in <xref target="I-D.ietf-rtcweb-jsep"/>, each m-line describes
        exactly one media source, and if mulitple media sources are carried in
        an RTP session, this is signalled using BUNDLE <xref
        target="I-D.ietf-mmusic-sdp-bundle-negotiation"/>; if BUNDLE is not
        used, each media source is carried in its own RTP session.</t>

        <t>There exist cases where an application using RTP and SDP needs to
        signal some relationship between RTP media streams that may be carried
        in either the same RTP session or different RTP sessions. For
        instance, there may be a need to signal a relationship between a video
        track and an audio track, and where the generator of the SDP does not
        yet know if they will be carried in the same RTP session or different
        RTP sessions.</t>

        <t>The SDP grouping framework <xref target="RFC5888"/> can be used to
        group m-lines. However, there is sometimes the need for an application
        to specify some application-level information about the association
        between the m-line and the group. This is not possible using the SDP
        grouping framework.</t>
      </section>

      <section title="Application to the WEBRTC MediaStream">
        <t>The W3C WebRTC API specification <xref
        target="W3C.WD-webrtc-20120209"/> specifies that communication between
        WebRTC entities is done via MediaStreams, which contain
        MediaStreamTracks. A MediaStreamTrack is generally carried using a
        single SSRC in an RTP session (forming an RTP media stream. The
        collision of terminology is unfortunate.) There might possibly be
        additional SSRCs, possibly within additional RTP sessions, in order to
        support functionality like forward error correction or simulcast. This
        complication is ignored below.</t>

        <t>In the RTP specification, media streams are identified using the
        SSRC field. Streams are grouped into RTP Sessions, and also carry a
        CNAME. Neither CNAME nor RTP session correspond to a MediaStream.
        Therefore, the association of an RTP media stream to MediaStreams need
        to be explicitly signaled.</t>

        <t>WebRTC defines a mapping (documented in <xref
        target="I-D.ietf-rtcweb-jsep"/>) where one SDP m-line is used to
        describe each MediaStreamTrack, and that the BUNDLE mechanism <xref
        target="I-D.ietf-mmusic-sdp-bundle-negotiation"/> is used to group
        MediaStreamTracks into RTP sessions. Therefore, the need is to specify
        the ID of a MediaStreamTrack and its associated MediaStream for each
        m-line, which can be accomplished with a media-level SDP
        attribute.</t>

        <t>This usage is described in <xref target="sect-media-stream"/>.</t>
      </section>
    </section>

    <section anchor="sect-definition" title="The Msid Mechanism">
      <t>This document defines a new SDP <xref target="RFC4566"/> media-level
      "msid" attribute. This new attribute allows endpoints to associate RTP
      media streams that are carried in the same or different m-lines. The
      attribute also allows application-specific information to the
      association.</t>

      <t>The value of the "msid" attribute consists of an identifier and
      optional application-specific data, according to the following ABNF
      <xref target="RFC5234"/> grammar:</t>

      <t/>

      <figure>
        <artwork><![CDATA[
  ; "attribute" is defined in RFC 4566.
  attribute =/ msid-attr
  msid-attr = "msid:" msid-id [ SP msid-appdata ]
  msid-id = 1*64token-char ; see RFC 4566
  msid-appdata = 1*64token-char  ; see RFC 4566

]]></artwork>
      </figure>

      <t>An example msid value for a group with the identifier "examplefoo"
      and application data "examplebar" might look like this:</t>

      <figure>
        <artwork><![CDATA[ 
  msid:examplefoo examplebar

]]></artwork>
      </figure>

      <t>The identifier is a string of ASCII characters that are legal in a
      "token", consisting of between 1 and 64 characters. It MUST be unique
      among the identifier values used in the same SDP session. It is
      RECOMMENDED that it is generated using a random-number generator.</t>

      <t>Application data is carried on the same line as the identifier,
      separated from the identifier by a space.</t>

      <t>The identifier uniquely identifies a group within the scope of an SDP
      description.</t>

      <t>There may be multiple msid attributes in a single media description.
      There may also be multiple media descriptions that have the same value
      for identifier and application data.</t>

      <t>Endpoints can update the associations between RTP media streams as
      expressed by msid attributes at any time; the semantics and restrictions
      of such grouping and ungrouping are application dependent.</t>
    </section>

    <section anchor="sect-semantic" title="The Msid-Semantic Attribute">
      <t>A session-level attribute is defined for signaling the semantics
      associated with an msid grouping. This allows msid groupings with
      different semantics to coexist.</t>

      <t>This OPTIONAL attribute gives the group identifier and its group
      semantic; it carries the same meaning as the ssrc-group-attr of RFC 5576
      section 4.2, but uses the identifier of the group rather than a list of
      SSRC values.</t>

      <t>This attribute MUST be present if "a=msid" is used.</t>

      <t>An empty list of identifiers is an indication that the sender
      supports the indicated semantic, but has no msid groupings of the given
      type in the present SDP.</t>

      <t>An identifier of "*" is an indication that all "a=msid" lines in the
      SDP have this specific semantic.</t>

      <t>The ABNF of msid-semantic is:</t>

      <figure>
        <artwork><![CDATA[
  attribute =/ msid-semantic-attr
  msid-semantic-attr = "msid-semantic:" msid-semantic msid-list
  msid-semantic = token ; see RFC 4566
  msid-list = *(" " msid-id) / " *"
   ]]></artwork>
      </figure>

      <t>The semantic field holds values from the IANA registriy "Semantics
      for the msid-semantic SDP attribute" (which is defined in <xref
      target="IANA"/>).</t>

      <t>An example msid-semantic might look like this, if a semantic LS was
      registered by IANA for the same purpose as the existing LS grouping
      semantic:</t>

      <figure>
        <artwork><![CDATA[  
  a=msid-semantic:LS xyzzy forolow

]]></artwork>
      </figure>

      <t>This means that the SDP description has two lip sync groups, with the
      group identifiers xyzzy and forolow, respectively.</t>

      <t>The msid-semantic attribute can occur more than once, but MUST NOT
      occur more than once with the same msid-semantic value.</t>
    </section>

    <section title="Generic SDP Offer/Answer Procedures">
      <t>In accordance with guidance on definitions of SDP extensions, this
      section gives the generic procedures that have to be followed by all
      implementations of Msid, independent of which semantics they
      support.</t>

      <t>Note that the use of msid is not negotiated; each side declares what
      it uses.</t>

      <section title="Generating the Initial Offer">
        <t>An entity implmementing an MSID semantic MUST add one or more
        "msid-semantic" attributes to its session level attributes, indicating
        the MSID semantic it supports.</t>
      </section>

      <section title="Answerer Processing of the Offer">
        <t>If an "msid-semantic" attribute is present in the answer, and the
        offerer supports the indicated semantic, the offerer MUST follow the
        procedures described for that semantic.</t>
      </section>

      <section title="Generating the Answer">
        <t>An entity implmementing an MSID semantic MUST add a "msid-semantic"
        attribute to its session level attributes, indicating the MSID
        semantic it supports.</t>
      </section>

      <section title="Offerer Processing of the Answer">
        <t>If an "msid-semantic" attribute is present in the answer, and the
        offerer supports the indicated semantic, the offerer MUST follow the
        procedures described for that semantic.</t>
      </section>
    </section>

    <section anchor="sect-media-stream"
             title="Applying Msid to WebRTC MediaStreams">
      <t>This section creates a new semantic for use with the framework
      defined in <xref target="sect-definition"/>, to be used for associating
      m-lines representing MediaStreamTracks within MediaStreams as defined in
      <xref target="W3C.WD-webrtc-20120209"/>.</t>

      <t>In the Javascript API, each MediaStream and MediaStreamTrack has an
      "id" attribute, which is a DOMString.</t>

      <t>The semantic token for this semantic is "WMS" (short for WebRTC Media
      Stream).</t>

      <t>The value of the "identifier" field in the msid consists of the "id"
      attribute of a MediaStream, as defined in its WebIDL specification.</t>

      <t>The value of the "appdata" field in the msid consists of the "id"
      attribute of a MediaStreamTrack, as defined in its WebIDL
      specification.</t>

      <t>If two different m-lines have MSID attributes with the same value for
      identifier and appdata, it means that these two m-lines are both
      intended for the same MediaStreamTrack. So far, no semantic for such a
      mixture have been defined, but this specification does not forbid the
      practice.</t>

      <t>When an SDP description is updated, a specific msid "identifier"
      continues to refer to the same MediaStream, and a specific "appdata" to
      the same MediaStreamTrack. Once negotiation has completed on a session,
      there is no memory apart from the currently valid SDP descriptions; an
      msid "identifier" value that appears in a later negotiation will be
      taken to refer to a new MediaStream.</t>

      <t>The following are the rules for handling updates of the list of
      m-lines and their msid values.</t>

      <t><list style="symbols">
          <t>When a new msid "identifier" value occurs in the description, the
          recipient can signal to its application that a new MediaStream has
          been added.</t>

          <t>When a description is updated to have more media sections with
          the same msid "identifier" value, but different "appdata" values,
          the recipient can signal to its application that new
          MediaStreamTracks have been added to the MediaStream.</t>

          <t>When a description is updated to no longer list the msid
          attribute on a specific media description, the recipient can signal
          to its application that the corresponding MediaStreamTrack has
          ended.</t>
        </list>In addition to signaling that the track is closed when its msid
      attribute disappears from the SDP, the track will also be signaled as
      being closed when all associated SSRCs have disappeared by the rules of
      <xref target="RFC3550"/> section 6.3.4 (BYE packet received) and 6.3.5
      (timeout), and when the corresponding media section is disabled by
      setting the port number to zero. Changing the direction of the media
      section to "recvonly" will not close the MediaStreamTrack.</t>

      <t>The association between SSRCs and m-lines is specified in <xref
      target="I-D.ietf-rtcweb-jsep"/>.</t>

      <section anchor="s-nonsignal" title="Handling of non-signalled tracks">
        <t>Entities that do not implement the WMS semantic will not send
        "msid-semantic:WMS". This means that there will be some incoming RTP
        packets that the recipient has no predefined MediaStream id value
        for.</t>

        <t>Note that this handling is triggered by incoming RTP packets, not
        by SDP negotiation.</t>

        <t>Handling will depend on whether or not the msid-semantic:WMS
        attribute is present. There are two cases:</t>

        <t><list style="symbols">
            <t>No "msid-semantic:WMS" attribute is present. The SDP session is
            assumed to be a backwards-compatible session. All incoming media,
            on all m-lines that are part of the SDP session, are assumed to
            belong to independent media streams, each with one track. The
            identifier of this media stream and of the media stream track is a
            randomly generated string; the WebIDL "label" attribute of this
            media stream will be set to "Non-WMS stream".</t>

            <t>An "msid-semantic:WMS" attribute is present. In this case, the
            sender implements the WMS semantic, and the packets are either
            caused by a bug or by timing skew between the arrival of the media
            packets and the SDP description. These packets MAY be discarded,
            or they MAY be buffered for a while in order to allow immediate
            startup of the media stream when the SDP description is updated.
            The arrival of media packets MUST NOT cause a new MediaStreamTrack
            to be signaled.</t>
          </list></t>

        <t>If an entity implementing the WMS semantic sends a description, it
        MUST include the msid-semantic:WMS attribute, even if no media streams
        are sent. This allows us to distinguish between the case of no media
        streams at the moment and the case of legacy SDP generation.</t>

        <t>It follows from the above that the media receiver implmementing the
        WMS semantic must have the SDP of the other party before it can decide
        correctly which of the two cases described above applies. RTP media
        packets that arrive before the remote party's SDP MUST be buffered or
        discarded, and MUST NOT cause a new MediaStreamTrack to be
        signalled.</t>

        <t>It follows from the above that media stream tracks in the "default"
        media stream cannot be closed by removing the msid attribute; the
        application must instead signal these as closed when the SSRC
        disappears according to the rules of RFC 3550 section 6.3.4 and 6.3.5
        or by disabling the m-line by setting its port to zero.</t>
      </section>

      <section title="Detailed Offer/Answer Procedures">
        <t>These procedures are given in terms of RFC 3264-recommended
        sections. They describe the actions to be taken in terms of
        MediaStreams and MediaStreamTracks; they do not include event
        signalling inside the application, which is described in JSEP.</t>

        <t>They are specifically applicable to the WMS semantic; other
        semantics will have their own consideration.</t>

        <section title="Generating the initial offer">
          <t>For each media section in the offer, if there is an associated
          MediaStreamTrack, the offerer adds one "a=msid" attribute to the
          section for each MediaStream with which the MediaStreamTrack is
          associated. The "identifier" field of the attribute is set to the
          WebIDL "id" attribute of the MediaStream, and the "appdata" field is
          set to the WebIDL "id" attribute of the MediaStreamTrack.</t>

          <t>The offerer adds an "msid-semantic:WMS" field to the
          session-level headers, and appends to it either a list of all the
          identifiers used in the offer, or the single character "*".</t>
        </section>

        <section title="Parsing the initial offer">
          <t>For each media section in the offer, and for each "a=msid"
          attribute in the media section, the receiver of the offer will
          perform the following steps:</t>

          <t><list style="symbols">
              <t>Extract the "appdata" field of the "a=msid" attribute</t>

              <t>Check if a MediaStreamTrack with the same WebIDL "id"
              attribute as the "appdata" field already exists, and is not in
              the "ended" state. If it is not found, create it.</t>

              <t>Extract the "identifier" field of the "a=msid" attribte.</t>

              <t>Check if a MediaStream with the same WebIDL "id" attribute
              already exists. If not, create it.</t>

              <t>Add the MediaStreamTrack to the MediaStream</t>
            </list></t>
        </section>

        <section title="Generating the answer">
          <t>The answer is generated in exactly the same manner as the
          offer.</t>

          <t>This includes adding a "msid-semantic:WMS" attribute in the
          session-level headers, independent of whether or not such a header
          was present in the offer.</t>
        </section>

        <section title="Offerer processing of the answer">
          <t>The answer is processed in exactly the same manner as the
          offer.</t>
        </section>

        <section title="Modifying the session">
          <t>On subsequent exchanges, precisely the same procedure as for the
          initial offer/answer is followed, but with one additional step in
          the parsing of the offer and answer:</t>

          <t><list style="symbols">
              <t>For each MediaStreamTrack that has been created as a result
              of previous offer/answer exchanges, and is not in the "ended"
              state, check to see if there is still an "a=msid" attribute in
              the present SDP whose "appdata" field is the same as the WebIDL
              "id" attribute of the track.</t>

              <t>If no such attribute is found, close the MediaStreamTrack.
              This will set its state to "ended".</t>
            </list></t>
        </section>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <section title="Attribute registration in existing registries">
        <t>This document requests IANA to register the "msid" attribute in the
        "att-field (media level only)" registry within the SDP parameters
        registry, according to the procedures of <xref target="RFC4566"/></t>

        <t>The required information for "msid" is:</t>

        <t><list style="symbols">
            <t>Contact name, email: IETF, contacted via mmusic@ietf.org, or a
            successor address designated by IESG</t>

            <t>Attribute name: msid</t>

            <t>Long-form attribute name: Media stream group Identifier</t>

            <t>Subject to charset: The attribute value contains only ASCII
            characters, and is therefore not subject to the charset
            attribute.</t>

            <t>Purpose: The attribute gives an association over a set of
            m-lines. It can be used to signal the relationship between a
            WebRTC MediaStream and a set of m-lines.</t>

            <t>Appropriate values: The details of appropriate values are given
            in RFC XXXX.</t>
          </list></t>

        <t>This document requests IANA to register the "msid-semantic"
        attribute in the "att-field (session level) registry within the SDP
        parameters registry, according to the same procedures.</t>

        <t>The required information is:</t>

        <t><list style="symbols">
            <t>Contact name, email: IETF, contacted via mmusic@ietf.org, or a
            successor address designated by IESG</t>

            <t>Attribute name: msid-semantic</t>

            <t>Long-form attribute name: Msid group semantic identifier</t>

            <t>Subject to charset: The attribute value contains only ASCII
            characters, and is therefore not subject to the charset
            attribute.</t>

            <t>Purpose: The attribute gives the semantics of an association
            over a set of m-lines.</t>

            <t>Appropriate values: The details are given in RFC XXXX.</t>
          </list></t>
      </section>

      <section title="New registry creation">
        <t>This document requests IANA to create a new registry called
        "Semantics for the msid-semantic SDP attribute" in the "Session
        Description Protocol (SDP) Parameters" group. This registry operates
        on the Expert Review policy <xref target="RFC5226"/>.</t>

        <t>This document requests IANA to register the "WMS" semantic within
        this new registry.</t>

        <t>The required information is:</t>

        <t><list style="symbols">
            <t>Description: WebRTC Media Stream, as given in RFC XXXX.</t>

            <t>Token: WMS</t>

            <t>Standards track reference: RFC XXXX</t>
          </list>IANA is requested to replace "RFC XXXX" with the RFC number
        of this document upon publication.</t>
      </section>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>An adversary with the ability to modify SDP descriptions has the
      ability to switch around tracks between media streams. This is a special
      case of the general security consideration that modification of SDP
      descriptions needs to be confined to entities trusted by the
      application.</t>

      <t>If implementing buffering as mentioned in <xref
      target="s-nonsignal"/>, the amount of buffering should be limited to
      avoid memory exhaustion attacks.</t>

      <t>No other attacks have been identified that depend on this
      mechanism.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>This note is based on sketches from, among others, Justin Uberti and
      Cullen Jennings.</t>

      <t>Special thanks to Flemming Andreassen, Miguel Garcia, Martin Thomson
      and Paul Kyzivat for their work in reviewing this draft, with many
      specific language suggestions.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include='reference.RFC.3550'?>

      <?rfc include='reference.RFC.4566'?>

      <?rfc include='reference.RFC.5226'?>

      <?rfc include='reference.RFC.5576'?>

      <?rfc include='reference.RFC.5234'?>

      <?rfc include='reference.W3C.WD-webrtc-20120209'?>

      <?rfc include='reference.I-D.ietf-rtcweb-jsep'?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.5761'?>

      <?rfc include='reference.RFC.5888'?>

      <?rfc include='reference.I-D.ietf-mmusic-sdp-bundle-negotiation'?>

      <?rfc include='reference.I-D.westerlund-avtcore-multiplex-architecture'?>

      <?rfc include='reference.I-D.roach-mmusic-unified-plan'?>
    </references>

    <section title="Design considerations, rejected alternatives">
      <t>This appendix should be deleted before publication as an RFC.</t>

      <t>One suggested mechanism has been to use CNAME instead of a new
      attribute. This was abandoned because CNAME identifies a synchronization
      context; one can imagine both wanting to have tracks from the same
      synchronization context in multiple MediaStreams and wanting to have
      tracks from multiple synchronization contexts within one MediaStream
      (but the latter is impossible, since a MediaStream is defined to impose
      synchronization on its members).</t>

      <t>Another suggestion has been to put the msid value within an attribute
      of RTCP SR (sender report) packets. This doesn't offer the ability to
      know that you have seen all the tracks currently configured for a media
      stream.</t>
    </section>

    <section title="Change log">
      <t>This appendix should be deleted before publication as an RFC.</t>

      <section title="Changes from alvestrand-rtcweb-msid-00 to -01">
        <t>Added track identifier.</t>

        <t>Added inclusion-by-reference of
        draft-lennox-mmusic-source-selection for track muting.</t>

        <t>Some rewording.</t>
      </section>

      <section title="Changes from alvestrand-rtcweb-msid-01 to -02">
        <t>Split document into sections describing a generic grouping
        mechanism and sections describing the application of this grouping
        mechanism to the WebRTC MediaStream concept.</t>

        <t>Removed the mechanism for muting tracks, since this is not central
        to the MSID mechanism.</t>
      </section>

      <section title="Changes from alvestrand-rtcweb-msid-02 to mmusic-msid-00">
        <t>Changed the draft name according to the wishes of the MMUSIC group
        chairs.</t>

        <t>Added text indicting cases where it's appropriate to have the same
        appdata for multiple SSRCs.</t>

        <t>Minor textual updates.</t>
      </section>

      <section title="Changes from alvestrand-mmusic-msid-00 to -01">
        <t>Increased the amount of explanatory text, much based on a review by
        Miguel Garcia.</t>

        <t>Removed references to BUNDLE, since that spec is under active
        discussion.</t>

        <t>Removed distinguished values of the MSID identifier.</t>
      </section>

      <section title="Changes from alvestrand-mmusic-msid-01 to -02">
        <t>Changed the order of the "msid-semantic: " attribute's value fields
        and allowed multiple identifiers. This makes the attribute useful as a
        marker for "I understand this semantic".</t>

        <t>Changed the syntax for "identifier" and "appdata" to be
        "token".</t>

        <t>Changed the registry for the "msid-semantic" attribute values to be
        a new registry, based on advice given in Atlanta.</t>
      </section>

      <section title="Changes from alvestrand-mmusic-msid-02 to ietf-mmusic-00">
        <t>Updated terminology to refer to m-lines rather than RTP sessions
        when discussing SDP formats and the ability of other linking
        mechanisms to refer to SSRCs.</t>

        <t>Changed the "default" mechanism to return independent streams after
        considering the synchronization problem.</t>

        <t>Removed the space from between "msid-semantic" and its value, to be
        consistent with RFC 5576.</t>
      </section>

      <section title="Changes from mmusic-msid-00 to -01">
        <t>Reworked msid mechanism to be a per-m-line attribute, to align with
        <xref target="I-D.roach-mmusic-unified-plan"/></t>
      </section>

      <section title="Changes from mmusic-msid-01 to -02">
        <t>Corrected several missed cases where the word "ssrc" was not
        changed to "M-line".</t>

        <t>Added pointer to unified-plan (which should be moved to point to
        -jsep)</t>

        <t>Removed suggestion that ssrc-group attributes can be used with
        "msid-semantic", it is now only the msid-semantic registry.</t>
      </section>

      <section title="Changes from mmusic-msid-02 to -03">
        <t>Corrected even more cases where the word "ssrc" was not changed to
        "M-line".</t>

        <t>Added the functionality of using an asterisk (*) in the
        msid-semantic line, in order to remove the need for listing all msids
        in the msid-semantic line whne only one msid-semantic is in use.</t>

        <t>Removed some now-unnecessary text.</t>
      </section>

      <section title="Changes from mmusic-msid-03 to -04">
        <t>Changed title to reflect focus on WebRTC MediaStreams</t>

        <t>Added a section on receiver-side media stream control, using the
        "msid-control" attribute.</t>
      </section>

      <section title="Changes from -04 to -05">
        <t>Removed the msid-control section after WG discussion.</t>

        <t>Removed some text that seemed only to pertain to resolved
        issues.</t>
      </section>

      <section title="Changes from -05 to -06">
        <t>Addressed issues found in Fleming Andreassen's review</t>

        <t>Referenced JSEP rather than unified-plan for the M-line mapping
        model</t>

        <t>Relaxed MSID definition to allow "token-char" in values rather than
        a-z 0-9 hyphen; tightened ABNF by adding length description to it.</t>

        <t>Deleted discussion of abandoned alternatives, as part of preparing
        for publication.</t>

        <t>Added a "detailed procedures" section to the WMS semantics
        description.</t>

        <t>Added IANA registration of the "msid-semantic" attribute.</t>
      </section>

      <section title="Changes from -06 to -07">
        <t>Changed terminology from referring to "WebRTC device" to referring
        to "entities that implement the WMS semantic".</t>

        <t>Changed names for ABNF constructions based on a proposal by Paul
        Kyzivat.</t>

        <t>Included a section on generic offer/answer semantics.</t>
      </section>

      <section title="Changes from -07 to -08">
        <t>Removed Appendix B that described the (now obsolete) ssrc-specific
        usage of MSID.</t>

        <t>Adopted a restructuring of the IANA section based on a suggestion
        from Martin Thomson.</t>
      </section>
    </section>
  </back>
</rfc>
